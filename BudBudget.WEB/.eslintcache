[{"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\index.tsx":"1","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\containers\\TransactionsContainer.tsx":"2","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\services\\DataService.ts":"3","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\config.tsx":"4","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\components\\TransactionsTable.tsx":"5","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\services\\LoginService.ts":"6","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\App.tsx":"7"},{"size":579,"mtime":1612721973589,"results":"8","hashOfConfig":"9"},{"size":2044,"mtime":1613081268643,"results":"10","hashOfConfig":"9"},{"size":691,"mtime":1612704877786,"results":"11","hashOfConfig":"9"},{"size":278,"mtime":1613081274244,"results":"12","hashOfConfig":"9"},{"size":2400,"mtime":1612704877768,"results":"13","hashOfConfig":"9"},{"size":648,"mtime":1613081274246,"results":"14","hashOfConfig":"9"},{"size":1619,"mtime":1613139817551,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7profx",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\index.tsx",[],["33","34"],"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\containers\\TransactionsContainer.tsx",["35","36","37"],"import { Button, Input, Layout, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsTable from \"../components/TransactionsTable\";\nimport { Category } from \"../models/Category\";\nimport { Entry } from \"../models/Entry\";\nimport { getCategories, getEntries } from \"../services/DataService\";\nimport \"./TransactionsContainer.css\";\n\nconst { Header, Content } = Layout;\n\nexport interface TableEntry extends Entry {\n\tkey: string;\n}\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nexport default function TransactionsContainer() {\n\tconst [entries, setEntries] = useState<TableEntry[]>([]);\n\tconst [categories, setCategories] = useState<Category[]>([]);\n\tconst [selectedEntries, setSelectedEntries] = useState<TableEntry[]>([]);\n\tconst [nameFilter, setNameFilter] = useState(\"\");\n\tconst [categoriesFilter, setCategoriesFilter] = useState<Category[]>([]);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst entries = await (await getEntries()).map((e) => {\n\t\t\t\treturn { key: e.id, ...e };\n\t\t\t});\n\t\t\tsetEntries(entries);\n\t\t\tconst categories = await getCategories();\n\t\t\tsetCategories(categories);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst filteredEntries = entries.filter((e) =>\n\t\te.description.includes(nameFilter)\n\t);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Header className=\"header_transactions\">\n\t\t\t\t<Button>test</Button>\n\t\t\t\t<Select\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode=\"multiple\"\n\t\t\t\t\tstyle={{ width: 200 }}\n\t\t\t\t\tplaceholder=\"Categorie\"\n\t\t\t\t\t// onChange={onChange}\n\t\t\t\t\tfilterOption\n\t\t\t\t>\n\t\t\t\t\t{categories.map((c) => {\n\t\t\t\t\t\treturn <Option value={c.name}>{c.name}</Option>;\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\t\t\t\t<Search\n\t\t\t\t\tplaceholder=\"Cerca...\"\n\t\t\t\t\tallowClear\n\t\t\t\t\tonChange={(e) => setNameFilter(e.target.value)}\n\t\t\t\t\tclassName=\"search_name\"\n\t\t\t\t/>\n\t\t\t</Header>\n\t\t\t<Content className=\"content_transactions\">\n\t\t\t\t<TransactionsTable\n\t\t\t\t\tdataSource={filteredEntries}\n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\t\tonChange: (keys, rows) => {\n\t\t\t\t\t\t\tsetSelectedEntries(rows);\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Content>\n\t\t</Layout>\n\t);\n}\n","C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\services\\DataService.ts",[],"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\config.tsx",[],"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\components\\TransactionsTable.tsx",[],"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\services\\LoginService.ts",[],["38","39"],"C:\\Users\\Antonio\\projects\\budbudget\\BudBudget.WEB\\src\\App.tsx",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":21,"column":9,"nodeType":"47","messageId":"48","endLine":21,"endColumn":24},{"ruleId":"45","severity":1,"message":"49","line":23,"column":9,"nodeType":"47","messageId":"48","endLine":23,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":23,"column":27,"nodeType":"47","messageId":"48","endLine":23,"endColumn":46},{"ruleId":"41","replacedBy":"51"},{"ruleId":"43","replacedBy":"52"},{"ruleId":null,"fatal":true,"severity":2,"message":"53","line":37,"column":78},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'selectedEntries' is assigned a value but never used.","Identifier","unusedVar","'categoriesFilter' is assigned a value but never used.","'setCategoriesFilter' is assigned a value but never used.",["54"],["55"],"Parsing error: ':' expected.","no-global-assign","no-unsafe-negation"]